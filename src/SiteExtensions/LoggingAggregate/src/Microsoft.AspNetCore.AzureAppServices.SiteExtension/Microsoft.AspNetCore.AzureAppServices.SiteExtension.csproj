<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <title>ASP.NET Core Logging Integration</title>
    <Description>This site extension enables logging integration for ASP.NET Core applications on Azure App Service.</Description>
    <TargetFramework>net461</TargetFramework>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <PackageTags>aspnet;logging;aspnetcore;AzureSiteExtension;keyvault;configuration;dataprotection</PackageTags>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <PackageType>AzureSiteExtension</PackageType>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <IncludeSymbols>false</IncludeSymbols>
    <ContentTargetFolders>content</ContentTargetFolders>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DisablePackageReferenceRestrictions>true</DisablePackageReferenceRestrictions>
    <NoSemVer20>true</NoSemVer20>
    <IsPackable>true</IsPackable>
    <IsShipping>true</IsShipping>
    <IsShipping Condition=" '$(PreReleaseVersionLabel)' == 'preview' ">false</IsShipping>

    <!-- Grab packages LB.csproj should have just built. -->
    <RestoreAdditionalProjectSources>$(RestoreAdditionalProjectSources);$(ArtifactsNonShippingPackagesDir)</RestoreAdditionalProjectSources>
  </PropertyGroup>

  <ItemGroup>
    <!-- Bundle in most down-level versions of the runtime-specific site extension packages. -->
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.2.1" PrivateAssets="All" />
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.2.2" PrivateAssets="All" />
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.3.1.x64" PrivateAssets="All" />
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.3.1.x86" PrivateAssets="All" />
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.5.0.x86" PrivateAssets="All" />
    <Reference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.5.0.x64" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="applicationHost.xdt" />
    <Content Include="scmApplicationHost.xdt" />
    <Content Include="$(OutputPath)\Microsoft.Web.Xdt.Extensions.dll" PackagePath="content" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.Web.Xdt.Extensions" PrivateAssets="All" />
  </ItemGroup>

  <Target Name="AddContent" BeforeTargets="_GetPackageFiles">
    <!-- Cannot assume this project and LB.csproj have the same package version. -->
    <!-- This target is defined in eng/targets/Packaging.targets and included in every C# and F# project. -->
    <MSBuild Projects="$(RepoRoot)src\SiteExtensions\LoggingBranch\LB.csproj"
        Targets="_GetPackageVersionInfo"
        SkipNonexistentProjects="false">
      <Output TaskParameter="TargetOutputs" ItemName="_ResolvedPackageVersionInfo" />
    </MSBuild>

    <ItemGroup>
      <!--
        When updating AspNetCoreMajorVersion or AspNetCoreMinorVersion, add the following SiteExtension packages to
        the list above and bump the version here.
      -->
      <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.6.0.x86"
          Version="%(_ResolvedPackageVersionInfo.PackageVersion)"
          PrivateAssets="All" />
      <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.SiteExtension.6.0.x64"
          Version="%(_ResolvedPackageVersionInfo.PackageVersion)"
          PrivateAssets="All" />
    </ItemGroup>

    <ItemGroup>
      <!-- LB.csproj package content is bundled into this one. -->
      <!-- The x64 & x86 SiteExtension packages have identical deps.json files - we only include the x64 files to avoid build warnings -->
      <ContentFilesToPack
          Include="$(NugetPackageRoot)\%(PackageReference.Identity)\%(PackageReference.Version)\content\**\*.*"
          Exclude="$(NugetPackageRoot)\Microsoft.AspNetCore.AzureAppServices.SiteExtension.*.x86\**\Microsoft.AspNetCore.AzureAppServices.HostingStartup.deps.json"/>

      <!-- Temporarily skip the common files -->
      <FilteredContentFilesToPack Include="@(ContentFilesToPack)" Condition="'%(RecursiveDir)' != ''" />
      <None Include="@(FilteredContentFilesToPack)" PackagePath="content\%(RecursiveDir)%(Filename)%(Extension)" Pack="true" />
    </ItemGroup>
  </Target>

</Project>
